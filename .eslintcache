[{"C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\index.tsx":"1","C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\App.tsx":"2","C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\Login.tsx":"3","C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\Register.tsx":"4","C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\SingleUser.tsx":"5","C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\SingleResource.tsx":"6","C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\UsersList.tsx":"7","C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\ResourcesList.tsx":"8","C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\DelayedResponse.tsx":"9","C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\CreateUser.tsx":"10","C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\Modify.tsx":"11"},{"size":219,"mtime":1611071025966,"results":"12","hashOfConfig":"13"},{"size":2972,"mtime":1611238292344,"results":"14","hashOfConfig":"13"},{"size":1895,"mtime":1611225303618,"results":"15","hashOfConfig":"13"},{"size":2367,"mtime":1611238000159,"results":"16","hashOfConfig":"13"},{"size":1397,"mtime":1611238131286,"results":"17","hashOfConfig":"13"},{"size":1397,"mtime":1611234136916,"results":"18","hashOfConfig":"13"},{"size":1553,"mtime":1611233703373,"results":"19","hashOfConfig":"13"},{"size":1775,"mtime":1611238141407,"results":"20","hashOfConfig":"13"},{"size":1636,"mtime":1611234036967,"results":"21","hashOfConfig":"13"},{"size":2064,"mtime":1611233682884,"results":"22","hashOfConfig":"13"},{"size":1209,"mtime":1611233699550,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"150v498",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\index.tsx",[],["51","52"],"C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\App.tsx",[],"C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\Login.tsx",[],"C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\Register.tsx",["53"],"C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\SingleUser.tsx",["54"],"C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\SingleResource.tsx",[],["55","56"],"C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\UsersList.tsx",["57"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\ninterface UserListSchema {\r\n  id: number;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  avatar: string;\r\n}\r\n\r\nconst UsersList: React.FC = () => {\r\n  const [users, setUsers] = useState<[]>([]);\r\n\r\n  async function usersGet() {\r\n    var response = axios.get(\"https://reqres.in/api/users?page=2\");\r\n    if ((await response).status === 200) {\r\n      const data = await response;\r\n      setUsers(data.data.data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    usersGet();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {users ? (\r\n        <div>\r\n          <h1 style={{ textAlign: \"center\" }}>Users List</h1>\r\n          <table style={{ top: \"87%\" }}>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Avatar</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n            </tr>\r\n            {users.length &&\r\n              users.map((user: UserListSchema) => (\r\n                <div>\r\n                  <tr>\r\n                    <td>{user.id}</td>\r\n                    <td>\r\n                      <img src={user.avatar} />\r\n                    </td>\r\n                    <td>{user.first_name}</td>\r\n                    <td>{user.last_name}</td>\r\n                    <td>{user.email}</td>\r\n                  </tr>\r\n                </div>\r\n              ))}\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <div>Not Found !!</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\ResourcesList.tsx",[],"C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\DelayedResponse.tsx",["58"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\ninterface DelayedSchema {\r\n  id: number;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  avatar: string;\r\n}\r\n\r\nconst DelayedResponse: React.FC = () => {\r\n  const [delayedResponse, setDelayedResponse] = useState<[]>([]);\r\n\r\n  async function delayedGet() {\r\n    var response = axios.get(\"https://reqres.in/api/users?delay=3\");\r\n    if ((await response).status === 200) {\r\n      const data = await response;\r\n      setDelayedResponse(data.data.data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    delayedGet();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {delayedResponse ? (\r\n        <div>\r\n          <h1 style={{ textAlign: \"center\" }}>Delayed List</h1>\r\n          <table style={{ top: \"90%\" }}>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Avatar</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n            </tr>\r\n            {delayedResponse.length &&\r\n              delayedResponse.map((delay: DelayedSchema) => (\r\n                <div>\r\n                  <tr>\r\n                    <td>{delay.id}</td>\r\n                    <td>\r\n                      <img src={delay.avatar} />\r\n                    </td>\r\n                    <td>{delay.first_name}</td>\r\n                    <td>{delay.last_name}</td>\r\n                    <td>{delay.email}</td>\r\n                  </tr>\r\n                </div>\r\n              ))}\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <div>Not Found !!</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DelayedResponse;\r\n","C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\CreateUser.tsx",[],"C:\\Users\\HP1\\Desktop\\Training\\assignment-3\\src\\components\\Modify.tsx",["59","60","61","62"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Modify: React.FC = () => {\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [job, setJob] = useState<string>(\"\");\r\n\r\n  async function UpdateHandler() {\r\n    var response = axios.put(\"https://reqres.in/api/users/2\");\r\n    if ((await response).status === 200) {\r\n      const data = await response;\r\n      alert(\"User updated !!\");\r\n      console.log(data);\r\n    }\r\n  }\r\n\r\n  async function DeleteHandler() {\r\n    var response = axios.delete(\"https://reqres.in/api/users/2\");\r\n    if ((await response).status === 204) {\r\n      const data = await response;\r\n      alert(\"User Deleted !!\");\r\n      console.log(data);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"base-container\">\r\n      <div className=\"header\">Update</div>\r\n      <div className=\"footer\">\r\n        <button type=\"submit\" className=\"btn\" onClick={UpdateHandler}>\r\n          Update\r\n        </button>\r\n      </div>\r\n      <div className=\"header\">Delete</div>\r\n      <div className=\"footer\">\r\n        <button type=\"submit\" className=\"btn\" onClick={DeleteHandler}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modify;\r\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":16,"column":18,"nodeType":"69","messageId":"70","endLine":16,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":47,"column":17,"nodeType":"73","endLine":47,"endColumn":42},{"ruleId":"63","replacedBy":"74"},{"ruleId":"65","replacedBy":"75"},{"ruleId":"71","severity":1,"message":"72","line":46,"column":23,"nodeType":"73","endLine":46,"endColumn":48},{"ruleId":"71","severity":1,"message":"72","line":46,"column":23,"nodeType":"73","endLine":46,"endColumn":49},{"ruleId":"76","severity":1,"message":"77","line":5,"column":10,"nodeType":"78","messageId":"79","endLine":5,"endColumn":14},{"ruleId":"76","severity":1,"message":"80","line":5,"column":16,"nodeType":"78","messageId":"79","endLine":5,"endColumn":23},{"ruleId":"76","severity":1,"message":"81","line":6,"column":10,"nodeType":"78","messageId":"79","endLine":6,"endColumn":13},{"ruleId":"76","severity":1,"message":"82","line":6,"column":15,"nodeType":"78","messageId":"79","endLine":6,"endColumn":21},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["83"],["84"],"@typescript-eslint/no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","'job' is assigned a value but never used.","'setJob' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]